% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/revscale.R
\name{revScale}
\alias{revScale}
\title{Potentially reverse and rescale variables}
\usage{
revScale(var, reverse = F, to = c(0, 1))
}
\arguments{
\item{var}{A variable or a selection of variables}

\item{reverse}{Logical, defaults to FALSE.}

\item{to}{a vector of integers the variables in var should be rescaled to}
}
\description{
Potentially reverse and rescale variables
}
\examples{

#Make a data frame
df<-data.frame(var1=seq(1,10,1),
var2=seq(-1,9,1),
var3=seq(10,1,1))
#Run the function on one variable
revScale(df$var1, reverse=F, to=c(0,1))
#Store the rescaled variable back into the data frame
var4<-revScale(df$var1, reverse=F, to=c(0,1))
head(df)
#See how the function handles negative numbers
revScale(df$var2)
#Run the function on a series of variables
library(tidyverse)
df \%>\%
select(c(1,3)) \%>\%
mutate(across(everything(), revScale))
#Run the function on a series of variables reversing
library(tidyverse)
df \%>\%
select(c(1,3)) \%>\%
mutate(across(everything(), revScale, reverse=F))
#Try a different vector to scale to
df \%>\%
select(c(1,3)) \%>\%
mutate(across(everything(), revScale, to=c(-1,1)))
Provide a meaningful name to the reversed variable
df \%>\%
select(c(1,3)) \%>\%
mutate(across(everything(), revScale, to=c(-1,1)), .names="{.col}_reversed")
}
